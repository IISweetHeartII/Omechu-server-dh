
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  getRuntime,
  skip
} = require('./runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.12.0
 * Query Engine version: 8047c96bbd92db98a2abc7c9323ce77c02c89dbc
 */
Prisma.prismaVersion = {
  client: "6.12.0",
  engine: "8047c96bbd92db98a2abc7c9323ce77c02c89dbc"
}

Prisma.PrismaClientKnownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`sqltag is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`empty is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`join is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`raw is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}



/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.ChoiceScalarFieldEnum = {
  id: 'id',
  description: 'description'
};

exports.Prisma.MenuScalarFieldEnum = {
  id: 'id',
  name: 'name',
  description: 'description',
  calory: 'calory',
  carbo: 'carbo',
  protein: 'protein',
  fat: 'fat',
  vitamin: 'vitamin',
  allergic: 'allergic',
  sodium: 'sodium',
  image_link: 'image_link'
};

exports.Prisma.MukburimScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  menu_id: 'menu_id',
  date: 'date'
};

exports.Prisma.Recommend_exceptScalarFieldEnum = {
  id: 'id',
  menu_id: 'menu_id',
  user_id: 'user_id',
  bit: 'bit'
};

exports.Prisma.ReportScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  review_id: 'review_id',
  text: 'text'
};

exports.Prisma.Rest_menuScalarFieldEnum = {
  id: 'id',
  menu_id: 'menu_id',
  rest_id: 'rest_id'
};

exports.Prisma.RestaurantScalarFieldEnum = {
  id: 'id',
  rest_image: 'rest_image',
  location: 'location',
  name: 'name',
  keyword: 'keyword',
  address: 'address',
  rating: 'rating',
  monday: 'monday',
  tuesday: 'tuesday',
  wednesday: 'wednesday',
  thursday: 'thursday',
  friday: 'friday',
  saturday: 'saturday',
  sunday: 'sunday',
  google_place_id: 'google_place_id'
};

exports.Prisma.ReviewScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  rest_id: 'rest_id',
  rating: 'rating',
  tag: 'tag',
  text: 'text',
  created_at: 'created_at',
  like: 'like'
};

exports.Prisma.Review_imageScalarFieldEnum = {
  id: 'id',
  review_id: 'review_id',
  link: 'link'
};

exports.Prisma.SessionsScalarFieldEnum = {
  session_id: 'session_id',
  expires: 'expires',
  data: 'data'
};

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  email: 'email',
  phone_num: 'phone_num',
  is_verified: 'is_verified',
  nickname: 'nickname',
  body_type: 'body_type',
  gender: 'gender',
  exercise: 'exercise',
  password: 'password',
  created_at: 'created_at',
  updated_at: 'updated_at',
  profileImageUrl: 'profileImageUrl'
};

exports.Prisma.AllergyScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  allergy: 'allergy'
};

exports.Prisma.PreferScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  prefer: 'prefer'
};

exports.Prisma.ZzimScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  rest_id: 'rest_id',
  created_at: 'created_at'
};

exports.Prisma.Email_verificationScalarFieldEnum = {
  id: 'id',
  email: 'email',
  code: 'code',
  created_at: 'created_at',
  expires_at: 'expires_at'
};

exports.Prisma.Rest_tagScalarFieldEnum = {
  rest_id: 'rest_id',
  tag: 'tag',
  count: 'count'
};

exports.Prisma.Password_reset_tokenScalarFieldEnum = {
  id: 'id',
  email: 'email',
  token: 'token',
  expires_at: 'expires_at',
  created_at: 'created_at'
};

exports.Prisma.Repre_menuScalarFieldEnum = {
  id: 'id',
  rest_id: 'rest_id',
  menu: 'menu'
};

exports.Prisma.User_restScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  rest_id: 'rest_id'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullableJsonNullValueInput = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};

exports.Prisma.choiceOrderByRelevanceFieldEnum = {
  description: 'description'
};

exports.Prisma.menuOrderByRelevanceFieldEnum = {
  name: 'name',
  description: 'description',
  vitamin: 'vitamin',
  allergic: 'allergic',
  image_link: 'image_link'
};

exports.Prisma.reportOrderByRelevanceFieldEnum = {
  text: 'text'
};

exports.Prisma.restaurantOrderByRelevanceFieldEnum = {
  rest_image: 'rest_image',
  location: 'location',
  name: 'name',
  keyword: 'keyword',
  address: 'address',
  monday: 'monday',
  tuesday: 'tuesday',
  wednesday: 'wednesday',
  thursday: 'thursday',
  friday: 'friday',
  saturday: 'saturday',
  sunday: 'sunday',
  google_place_id: 'google_place_id'
};

exports.Prisma.JsonNullValueFilter = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull,
  AnyNull: Prisma.AnyNull
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.reviewOrderByRelevanceFieldEnum = {
  text: 'text'
};

exports.Prisma.review_imageOrderByRelevanceFieldEnum = {
  link: 'link'
};

exports.Prisma.sessionsOrderByRelevanceFieldEnum = {
  session_id: 'session_id',
  data: 'data'
};

exports.Prisma.userOrderByRelevanceFieldEnum = {
  email: 'email',
  phone_num: 'phone_num',
  nickname: 'nickname',
  password: 'password',
  profileImageUrl: 'profileImageUrl'
};

exports.Prisma.email_verificationOrderByRelevanceFieldEnum = {
  email: 'email',
  code: 'code'
};

exports.Prisma.rest_tagOrderByRelevanceFieldEnum = {
  tag: 'tag'
};

exports.Prisma.password_reset_tokenOrderByRelevanceFieldEnum = {
  email: 'email',
  token: 'token'
};

exports.Prisma.repre_menuOrderByRelevanceFieldEnum = {
  menu: 'menu'
};
exports.allergy_type = exports.$Enums.allergy_type = {
  egg: 'egg',
  milk: 'milk',
  shellfish: 'shellfish',
  seafood: 'seafood',
  nuts: 'nuts'
};

exports.prefer_type = exports.$Enums.prefer_type = {
  korean: 'korean',
  western: 'western',
  chinese: 'chinese',
  japanese: 'japanese',
  other: 'other'
};

exports.Prisma.ModelName = {
  choice: 'choice',
  menu: 'menu',
  mukburim: 'mukburim',
  recommend_except: 'recommend_except',
  report: 'report',
  rest_menu: 'rest_menu',
  restaurant: 'restaurant',
  review: 'review',
  review_image: 'review_image',
  sessions: 'sessions',
  user: 'user',
  allergy: 'allergy',
  prefer: 'prefer',
  zzim: 'zzim',
  email_verification: 'email_verification',
  rest_tag: 'rest_tag',
  password_reset_token: 'password_reset_token',
  repre_menu: 'repre_menu',
  user_rest: 'user_rest'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        let message
        const runtime = getRuntime()
        if (runtime.isEdge) {
          message = `PrismaClient is not configured to run in ${runtime.prettyName}. In order to run Prisma Client on edge runtime, either:
- Use Prisma Accelerate: https://pris.ly/d/accelerate
- Use Driver Adapters: https://pris.ly/d/driver-adapters
`;
        } else {
          message = 'PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `' + runtime.prettyName + '`).'
        }

        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
